name: 🚀 FlowCanvasAI CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  # 🧪 Testing Job
  test:
    name: 🧪 Tests
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🟢 Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: 📦 Install dependencies
      run: npm ci
      
    - name: 🔍 Lint code
      run: npm run lint --if-present
      
    - name: 🧪 Run tests
      run: npm run test --if-present
      
    - name: 📊 Upload coverage reports
      uses: codecov/codecov-action@v3
      if: matrix.node-version == '20.x'
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella

  # 🏗️ Build Job  
  build:
    name: 🏗️ Build
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: 📦 Install dependencies
      run: npm ci
      
    - name: 🏗️ Build application
      run: npm run build
      env:
        NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}
        NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
        NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
        NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}
        NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}
        NEXT_PUBLIC_FIREBASE_APP_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}
        NEXT_PUBLIC_GEMINI_API_KEY: ${{ secrets.NEXT_PUBLIC_GEMINI_API_KEY }}
        
    - name: 📤 Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-files
        path: .next
        retention-days: 5

  # 🔍 Code Quality Job
  code-quality:
    name: 🔍 Code Quality
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: 📦 Install dependencies
      run: npm ci
      
    - name: 🔍 TypeScript check
      run: npx tsc --noEmit
      
    - name: 🎨 Prettier check
      run: npx prettier --check . --ignore-unknown
      
    - name: 📝 ESLint check
      run: npx eslint . --ext .js,.jsx,.ts,.tsx --max-warnings 0

  # 🚀 Deploy to Vercel (on main branch)
  deploy:
    name: 🚀 Deploy to Vercel
    runs-on: ubuntu-latest
    needs: [test, build, code-quality]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🚀 Deploy to Vercel
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        github-token: ${{ secrets.GITHUB_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        vercel-args: '--prod'

  # 🏷️ Release Job (on tags)
  release:
    name: 🏷️ Create Release
    runs-on: ubuntu-latest
    needs: [test, build, code-quality]
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🏷️ Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          🚀 **FlowCanvasAI Release ${{ github.ref }}**
          
          ## ✨ What's New
          - Performance improvements
          - Bug fixes and enhancements  
          - New AI features
          
          ## 🔧 Installation
          ```bash
          git clone https://github.com/${{ github.repository }}.git
          cd flowcanvas-ai
          npm install
          npm run dev
          ```
          
          ## 📋 Full Changelog
          See the [commit history](https://github.com/${{ github.repository }}/commits/${{ github.ref }}) for detailed changes.
        draft: false
        prerelease: false

  # 🔒 Security Audit
  security:
    name: 🔒 Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: 📦 Install dependencies
      run: npm ci
      
    - name: 🔒 Run security audit
      run: npm audit --audit-level=high
      
    - name: 🔍 CodeQL Analysis
      uses: github/codeql-action/init@v2
      with:
        languages: javascript
        
    - name: 🔍 Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2